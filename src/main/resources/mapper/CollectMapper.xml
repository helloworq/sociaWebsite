<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.testspringboot.dao.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.example.testspringboot.entiy.Collect" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="collectMomentID" property="collectmomentid" jdbcType="INTEGER" />
    <result column="collectTime" property="collecttime" jdbcType="TIMESTAMP" />
    <result column="whoCollect" property="whocollect" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, collectMomentID, collectTime, whoCollect
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from collect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.testspringboot.entiy.Collect" >
    insert into collect (id, collectMomentID, collectTime, 
      whoCollect)
    values (#{id,jdbcType=INTEGER}, #{collectmomentid,jdbcType=INTEGER}, #{collecttime,jdbcType=TIMESTAMP}, 
      #{whocollect,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.testspringboot.entiy.Collect" >
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="collectmomentid != null" >
        collectMomentID,
      </if>
      <if test="collecttime != null" >
        collectTime,
      </if>
      <if test="whocollect != null" >
        whoCollect,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="collectmomentid != null" >
        #{collectmomentid,jdbcType=INTEGER},
      </if>
      <if test="collecttime != null" >
        #{collecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="whocollect != null" >
        #{whocollect,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.testspringboot.entiy.Collect" >
    update collect
    <set >
      <if test="collectmomentid != null" >
        collectMomentID = #{collectmomentid,jdbcType=INTEGER},
      </if>
      <if test="collecttime != null" >
        collectTime = #{collecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="whocollect != null" >
        whoCollect = #{whocollect,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.testspringboot.entiy.Collect" >
    update collect
    set collectMomentID = #{collectmomentid,jdbcType=INTEGER},
      collectTime = #{collecttime,jdbcType=TIMESTAMP},
      whoCollect = #{whocollect,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectMyCollectByUserName" parameterType="java.lang.String" resultType="com.example.testspringboot.entiy.UserMomentsInfo">
    select * from user_moments_info where id in
    (
    select collectMomentID from collect where whoCollect=#{userName}
    )
  </select>
</mapper>